
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> source("SpecificationSims/SimFunctions.R")
> 
> # set our simulation parameters
> Replications = 100
> sample.size = c(50, 100, 200, 500)
> error.sd = c(1, 3, 5)
> B1.spatial.var = c(0, .25, .75)
> B2.spatial.var = c(0, .25, .75)
> 
> # expand the parameter vectors and create a container for our simulation output
> sim.parameters = expand.grid(error.sd, B1.spatial.var, B2.spatial.var, sample.size)
> names(sim.parameters) = c("error.sd", "B1.spatial.var", "B2.spatial.var", "sample.size")
> 
> meta.sim.num = dim(sim.parameters)[1]
> 
> R2Output = array(NA, c(length(sample.size),
+                            length(error.sd),
+                            length(B1.spatial.var),
+                            length(B2.spatial.var),
+                            Replications,
+                            2),
+                      dimnames = list(ss = sample.size,
+                                      error.sd = error.sd,
+                                      B1sv = B1.spatial.var,
+                                      B2sv = B2.spatial.var,
+                                      simNum = 1:Replications,
+                                      R2 = c("OLS", "LWR")       ))
> 
> MetricOutput = array(NA, c(length(sample.size),
+                         length(error.sd),
+                         length(B1.spatial.var),
+                         length(B2.spatial.var),
+                         Replications,
+                         12, 13),
+                   dimnames = list(ss = sample.size,
+                                   error.sd = error.sd,
+                                   B1sv = B1.spatial.var,
+                                   B2sv = B2.spatial.var,
+                                   simNum = 1:Replications,
+                                   optimized = c("corB0", "corB1", "corB2", "CV", "GCV",
+                                                 "RMSE.B0", "RMSE.B1", "RMSE.B2", "SCV",
+                                                 "ttest%B0", "ttest%B1", "ttest%B2"),
+                                   metric = c("bandwidths", "B0.cor", "B1.cor", "B2.cor",
+                                              "B0.RMSE", "B1.RMSE", "B2.RMSE",
+                                              "B0.t.perc", "B1.t.perc", "B2.t.perc", "GCV", "SCV", "CV")
+                   )
+ )
> 
> # now march through the different parameter combinations running the simulations
> 
> for( i in 1:meta.sim.num) { 
+   start = Sys.time()
+   simRepOut = simulationReplicator(Replications, sim.parameters[i, ], MC = TRUE)
+   simOut = simRepReorganizer(simRepOut)
+   
+   R2Output[as.character(sim.parameters[i, "sample.size"]),
+                as.character(sim.parameters[i, "error.sd"]),
+                as.character(sim.parameters[i, "B1.spatial.var"]),
+                as.character(sim.parameters[i, "B2.spatial.var"]), , ] = simOut[[1]]
+   
+   MetricOutput[as.character(sim.parameters[i, "sample.size"]),
+             as.character(sim.parameters[i, "error.sd"]),
+             as.character(sim.parameters[i, "B1.spatial.var"]),
+             as.character(sim.parameters[i, "B2.spatial.var"]), , , ] = simOut[[2]]
+   end = Sys.time()
+ 
+   print(paste("For loop", i,"of", meta.sim.num))
+   print(round(difftime(end, start, units = "m"), 2))
+   save(R2Output, MetricOutput, file = "SpecificationSims/uberScriptOutput.RData")
+ }
[1] "For loop 1 of 108"
Time difference of 0.68 mins
[1] "For loop 2 of 108"
Time difference of 0.65 mins
[1] "For loop 3 of 108"
Time difference of 0.65 mins
[1] "For loop 4 of 108"
Time difference of 0.67 mins
[1] "For loop 5 of 108"
Time difference of 0.64 mins
[1] "For loop 6 of 108"
Time difference of 0.68 mins
[1] "For loop 7 of 108"
Time difference of 0.97 mins
[1] "For loop 8 of 108"
Time difference of 0.73 mins
[1] "For loop 9 of 108"
Time difference of 0.65 mins
[1] "For loop 10 of 108"
Time difference of 0.63 mins
[1] "For loop 11 of 108"
Time difference of 0.75 mins
[1] "For loop 12 of 108"
Time difference of 0.63 mins
[1] "For loop 13 of 108"
Time difference of 0.63 mins
[1] "For loop 14 of 108"
Time difference of 0.64 mins
[1] "For loop 15 of 108"
Time difference of 0.66 mins
[1] "For loop 16 of 108"
Time difference of 0.63 mins
[1] "For loop 17 of 108"
Time difference of 0.67 mins
[1] "For loop 18 of 108"
Time difference of 0.63 mins
[1] "For loop 19 of 108"
Time difference of 0.63 mins
[1] "For loop 20 of 108"
Time difference of 0.66 mins
[1] "For loop 21 of 108"
Time difference of 0.68 mins
[1] "For loop 22 of 108"
Time difference of 0.65 mins
[1] "For loop 23 of 108"
Time difference of 0.63 mins
[1] "For loop 24 of 108"
Time difference of 0.63 mins
[1] "For loop 25 of 108"
Time difference of 0.68 mins
[1] "For loop 26 of 108"
Time difference of 0.67 mins
[1] "For loop 27 of 108"
Time difference of 0.64 mins
[1] "For loop 28 of 108"
Time difference of 2.97 mins
[1] "For loop 29 of 108"
Time difference of 2.99 mins
[1] "For loop 30 of 108"
Time difference of 2.66 mins
[1] "For loop 31 of 108"
Time difference of 2.68 mins
[1] "For loop 32 of 108"
Time difference of 2.75 mins
[1] "For loop 33 of 108"
Time difference of 3.27 mins
[1] "For loop 34 of 108"
Time difference of 3.78 mins
[1] "For loop 35 of 108"
Time difference of 2.6 mins
[1] "For loop 36 of 108"
Time difference of 2.58 mins
[1] "For loop 37 of 108"
Time difference of 2.59 mins
[1] "For loop 38 of 108"
Time difference of 2.66 mins
[1] "For loop 39 of 108"
Time difference of 2.67 mins
[1] "For loop 40 of 108"
Time difference of 2.73 mins
[1] "For loop 41 of 108"
Time difference of 2.6 mins
[1] "For loop 42 of 108"
Time difference of 2.59 mins
[1] "For loop 43 of 108"
Time difference of 2.69 mins
[1] "For loop 44 of 108"
Time difference of 2.71 mins
[1] "For loop 45 of 108"
Time difference of 2.74 mins
[1] "For loop 46 of 108"
Time difference of 2.71 mins
[1] "For loop 47 of 108"
Time difference of 2.61 mins
[1] "For loop 48 of 108"
Time difference of 2.62 mins
[1] "For loop 49 of 108"
Time difference of 2.62 mins
[1] "For loop 50 of 108"
Time difference of 2.81 mins
[1] "For loop 51 of 108"
Time difference of 2.63 mins
[1] "For loop 52 of 108"
Time difference of 2.65 mins
[1] "For loop 53 of 108"
Time difference of 2.62 mins
[1] "For loop 54 of 108"
Time difference of 2.66 mins
[1] "For loop 55 of 108"
Time difference of 11.61 mins
[1] "For loop 56 of 108"
Time difference of 11.96 mins
[1] "For loop 57 of 108"
Time difference of 11.99 mins
[1] "For loop 58 of 108"
Time difference of 11.72 mins
[1] "For loop 59 of 108"
Time difference of 12.25 mins
[1] "For loop 60 of 108"
Time difference of 11.54 mins
[1] "For loop 61 of 108"
Time difference of 11.31 mins
[1] "For loop 62 of 108"
Time difference of 11.43 mins
[1] "For loop 63 of 108"
Time difference of 11.55 mins
[1] "For loop 64 of 108"
Time difference of 11.5 mins
[1] "For loop 65 of 108"
Time difference of 11.73 mins
[1] "For loop 66 of 108"
Time difference of 11.66 mins
[1] "For loop 67 of 108"
Time difference of 11.76 mins
[1] "For loop 68 of 108"
Time difference of 11.78 mins
[1] "For loop 69 of 108"
Time difference of 11.98 mins
[1] "For loop 70 of 108"
Time difference of 11.5 mins
[1] "For loop 71 of 108"
Time difference of 11.45 mins
[1] "For loop 72 of 108"
Time difference of 11.54 mins
[1] "For loop 73 of 108"
Time difference of 12.43 mins
[1] "For loop 74 of 108"
Time difference of 11.79 mins
[1] "For loop 75 of 108"
Time difference of 11.92 mins
[1] "For loop 76 of 108"
Time difference of 11.89 mins
[1] "For loop 77 of 108"
Time difference of 11.48 mins
[1] "For loop 78 of 108"
Time difference of 11.38 mins
[1] "For loop 79 of 108"
Time difference of 11.97 mins
[1] "For loop 80 of 108"
Time difference of 11.95 mins
[1] "For loop 81 of 108"
Time difference of 11.22 mins
[1] "For loop 82 of 108"
Time difference of 101.99 mins
[1] "For loop 83 of 108"
Time difference of 93.25 mins
[1] "For loop 84 of 108"
Time difference of 94.23 mins
[1] "For loop 85 of 108"
Time difference of 90.76 mins
[1] "For loop 86 of 108"
Time difference of 91.83 mins
[1] "For loop 87 of 108"
Time difference of 90.81 mins
[1] "For loop 88 of 108"
Time difference of 91.97 mins
[1] "For loop 89 of 108"
Time difference of 92.72 mins
[1] "For loop 90 of 108"
Time difference of 92.78 mins
[1] "For loop 91 of 108"
Time difference of 92.66 mins
[1] "For loop 92 of 108"
Time difference of 92.91 mins
[1] "For loop 93 of 108"
Time difference of 109.89 mins
[1] "For loop 94 of 108"
Time difference of 105.64 mins
[1] "For loop 95 of 108"
Time difference of 97.26 mins
[1] "For loop 96 of 108"
Time difference of 97.88 mins
[1] "For loop 97 of 108"
Time difference of 106.32 mins
[1] "For loop 98 of 108"
Time difference of 98.35 mins
[1] "For loop 99 of 108"
Time difference of 101.11 mins
[1] "For loop 100 of 108"
Time difference of 111.62 mins
[1] "For loop 101 of 108"
Time difference of 102.04 mins
[1] "For loop 102 of 108"
Time difference of 98.99 mins
[1] "For loop 103 of 108"
Time difference of 98.36 mins
[1] "For loop 104 of 108"
Time difference of 99.76 mins
[1] "For loop 105 of 108"
Time difference of 99 mins
[1] "For loop 106 of 108"
Time difference of 97.01 mins
[1] "For loop 107 of 108"
Time difference of 106.58 mins
[1] "For loop 108 of 108"
Time difference of 103.4 mins
> 
> proc.time()
       user      system     elapsed 
1072346.900     217.629  184120.744 
