
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> source("SpecificationSims/SimFunctions.R")
> 
> # set our simulation parameters
> Replications = 6
> sample.size = c(50, 100) #, 200, 500, 1000)
> error.sd = c(1, 3, 5)
> B1.spatial.var = c(0, .25, .75, 1.5)
> B2.spatial.var = c(0, .25, .75, 1.5)
> 
> # expand the parameter vectors and create a container for our simulation output
> sim.parameters = expand.grid(error.sd, B1.spatial.var, B2.spatial.var, sample.size)
> names(sim.parameters) = c("error.sd", "B1.spatial.var", "B2.spatial.var", "sample.size")
> 
> meta.sim.num = dim(sim.parameters)[1]
> 
> R2Output = array(NA, c(length(sample.size),
+                        length(error.sd),
+                        length(B1.spatial.var),
+                        length(B2.spatial.var),
+                        Replications,
+                        2),
+                      dimnames = list(ss = sample.size,
+                                      error.sd = error.sd,
+                                      B1sv = B1.spatial.var,
+                                      B2sv = B2.spatial.var,
+                                      simNum = 1:Replications,
+                                      R2 = c("OLS", "LWR")       ))
> 
> MetricOutput = array(NA, c(length(sample.size),
+                         length(error.sd),
+                         length(B1.spatial.var),
+                         length(B2.spatial.var),
+                         Replications,
+                         # Be careful about the dimension, must be ((number -1) of metrics 
+                            #in LWRMetrics function output in SimFunctions (1 per line), metrics)
+                            14, 15),
+                   dimnames = list(ss = sample.size,
+                                   error.sd = error.sd,
+                                   B1sv = B1.spatial.var,
+                                   B2sv = B2.spatial.var,
+                                   simNum = 1:Replications,
+                                   # IMPORTANT: Before running uberscript, test it once to make sure the labels are in
+                                   # the proper order!
+                                   optimized = c( "AICc", "corB0", "corB1", "corB2", "CV", "GCV", "R2",
+                                                 "RMSE.B0", "RMSE.B1", "RMSE.B2", "SCV",
+                                                 "ttest%B0", "ttest%B1", "ttest%B2"),
+                                   metric = c("bandwidths", "B0.cor", "B1.cor", "B2.cor",
+                                              "B0.RMSE", "B1.RMSE", "B2.RMSE",
+                                              "B0.t.perc", "B1.t.perc", "B2.t.perc", "GCV", "SCV", "CV", "AICc", "R2")
+                   )
+ )
> 
> # now march through the different parameter combinations running the simulations
> 
> for( i in 1:meta.sim.num) { 
+   start = Sys.time()
+   simRepOut = simulationReplicator(Replications, sim.parameters[i, ], MC = TRUE)
+   simOut = simRepReorganizer(simRepOut)
+   
+   R2Output[as.character(sim.parameters[i, "sample.size"]),
+            as.character(sim.parameters[i, "error.sd"]),
+            as.character(sim.parameters[i, "B1.spatial.var"]),
+            as.character(sim.parameters[i, "B2.spatial.var"]), , ] = simOut[[1]]
+   
+   MetricOutput[as.character(sim.parameters[i, "sample.size"]),
+                as.character(sim.parameters[i, "error.sd"]),
+                as.character(sim.parameters[i, "B1.spatial.var"]),
+                as.character(sim.parameters[i, "B2.spatial.var"]), , , ] = simOut[[2]]
+   end = Sys.time()
+ 
+   print(paste("For loop", i,"of", meta.sim.num))
+   print(round(difftime(end, start, units = "m"), 2))
+   save(R2Output, MetricOutput, file = "SpecificationSims/uberScriptOutput.RData")
+ }
[1] "For loop 1 of 96"
Time difference of 0.1 mins
[1] "For loop 2 of 96"
Time difference of 0.11 mins
[1] "For loop 3 of 96"
Time difference of 0.1 mins
[1] "For loop 4 of 96"
Time difference of 0.11 mins
[1] "For loop 5 of 96"
Time difference of 0.12 mins
[1] "For loop 6 of 96"
Time difference of 0.12 mins
[1] "For loop 7 of 96"
Time difference of 0.12 mins
[1] "For loop 8 of 96"
Time difference of 0.11 mins
[1] "For loop 9 of 96"
Time difference of 0.11 mins
[1] "For loop 10 of 96"
Time difference of 0.07 mins
[1] "For loop 11 of 96"
Time difference of 0.09 mins
[1] "For loop 12 of 96"
Time difference of 0.12 mins
[1] "For loop 13 of 96"
Time difference of 0.06 mins
[1] "For loop 14 of 96"
Time difference of 0.12 mins
[1] "For loop 15 of 96"
Time difference of 0.05 mins
[1] "For loop 16 of 96"
Time difference of 0.1 mins
[1] "For loop 17 of 96"
Time difference of 0.11 mins
[1] "For loop 18 of 96"
Time difference of 0.12 mins
[1] "For loop 19 of 96"
Time difference of 0.11 mins
[1] "For loop 20 of 96"
Time difference of 0.11 mins
[1] "For loop 21 of 96"
Time difference of 0.12 mins
[1] "For loop 22 of 96"
Time difference of 0.12 mins
[1] "For loop 23 of 96"
Time difference of 0.12 mins
[1] "For loop 24 of 96"
Time difference of 0.13 mins
[1] "For loop 25 of 96"
Time difference of 0.13 mins
[1] "For loop 26 of 96"
Time difference of 0.06 mins
[1] "For loop 27 of 96"
Time difference of 0.12 mins
[1] "For loop 28 of 96"
Time difference of 0.13 mins
[1] "For loop 29 of 96"
Time difference of 0.13 mins
[1] "For loop 30 of 96"
Time difference of 0.13 mins
[1] "For loop 31 of 96"
Time difference of 0.11 mins
[1] "For loop 32 of 96"
Time difference of 0.13 mins
[1] "For loop 33 of 96"
Time difference of 0.12 mins
[1] "For loop 34 of 96"
Time difference of 0.13 mins
[1] "For loop 35 of 96"
Time difference of 0.08 mins
[1] "For loop 36 of 96"
Time difference of 0.11 mins
[1] "For loop 37 of 96"
Time difference of 0.12 mins
[1] "For loop 38 of 96"
Time difference of 0.13 mins
[1] "For loop 39 of 96"
Time difference of 0.11 mins
[1] "For loop 40 of 96"
Time difference of 0.09 mins
[1] "For loop 41 of 96"
Time difference of 0.09 mins
[1] "For loop 42 of 96"
Time difference of 0.13 mins
[1] "For loop 43 of 96"
Time difference of 0.13 mins
[1] "For loop 44 of 96"
Time difference of 0.12 mins
[1] "For loop 45 of 96"
Time difference of 0.12 mins
[1] "For loop 46 of 96"
Time difference of 0.12 mins
[1] "For loop 47 of 96"
Time difference of 0.12 mins
[1] "For loop 48 of 96"
Time difference of 0.13 mins
[1] "For loop 49 of 96"
Time difference of 0.43 mins
[1] "For loop 50 of 96"
Time difference of 0.45 mins
[1] "For loop 51 of 96"
Time difference of 0.49 mins
[1] "For loop 52 of 96"
Time difference of 0.42 mins
[1] "For loop 53 of 96"
Time difference of 0.38 mins
[1] "For loop 54 of 96"
Time difference of 0.33 mins
[1] "For loop 55 of 96"
Time difference of 0.38 mins
[1] "For loop 56 of 96"
Time difference of 0.32 mins
[1] "For loop 57 of 96"
Time difference of 0.28 mins
[1] "For loop 58 of 96"
Time difference of 0.17 mins
[1] "For loop 59 of 96"
Time difference of 0.17 mins
[1] "For loop 60 of 96"
Time difference of 0.16 mins
[1] "For loop 61 of 96"
Time difference of 0.17 mins
[1] "For loop 62 of 96"
Time difference of 0.16 mins
[1] "For loop 63 of 96"
Time difference of 0.18 mins
[1] "For loop 64 of 96"
Time difference of 0.19 mins
[1] "For loop 65 of 96"
Time difference of 0.22 mins
[1] "For loop 66 of 96"
Time difference of 0.18 mins
[1] "For loop 67 of 96"
Time difference of 0.21 mins
[1] "For loop 68 of 96"
Time difference of 0.16 mins
[1] "For loop 69 of 96"
Time difference of 0.16 mins
[1] "For loop 70 of 96"
Time difference of 0.17 mins
[1] "For loop 71 of 96"
Time difference of 0.17 mins
[1] "For loop 72 of 96"
Time difference of 0.16 mins
[1] "For loop 73 of 96"
Time difference of 0.19 mins
[1] "For loop 74 of 96"
Time difference of 0.18 mins
[1] "For loop 75 of 96"
Time difference of 0.18 mins
[1] "For loop 76 of 96"
Time difference of 0.16 mins
[1] "For loop 77 of 96"
Time difference of 0.16 mins
[1] "For loop 78 of 96"
Time difference of 0.18 mins
[1] "For loop 79 of 96"
Time difference of 0.16 mins
[1] "For loop 80 of 96"
Time difference of 0.16 mins
[1] "For loop 81 of 96"
Time difference of 0.19 mins
[1] "For loop 82 of 96"
Time difference of 0.33 mins
[1] "For loop 83 of 96"
Time difference of 0.21 mins
[1] "For loop 84 of 96"
Time difference of 0.23 mins
[1] "For loop 85 of 96"
Time difference of 0.26 mins
[1] "For loop 86 of 96"
Time difference of 0.23 mins
[1] "For loop 87 of 96"
Time difference of 0.28 mins
[1] "For loop 88 of 96"
Time difference of 0.2 mins
[1] "For loop 89 of 96"
Time difference of 0.31 mins
[1] "For loop 90 of 96"
Time difference of 0.23 mins
[1] "For loop 91 of 96"
Time difference of 0.19 mins
[1] "For loop 92 of 96"
Time difference of 0.26 mins
[1] "For loop 93 of 96"
Time difference of 0.32 mins
[1] "For loop 94 of 96"
Time difference of 0.33 mins
[1] "For loop 95 of 96"
Time difference of 0.22 mins
[1] "For loop 96 of 96"
Time difference of 0.36 mins
> 
> proc.time()
    user   system  elapsed 
5859.637   43.834 1022.307 
